{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/allService/data.service\";\nexport class AddUserComponent {\n  constructor(dialog, route, fb, serData) {\n    this.dialog = dialog;\n    this.route = route;\n    this.fb = fb;\n    this.serData = serData;\n  }\n  ngOnInit() {\n    this.service = this.fb.group({\n      servicename: [[\"\", Validators.required]],\n      sName: [\"\", Validators.required],\n      sCharge: [\"\", Validators.required]\n    });\n    this.serData.getserviceGroup().subscribe(res => {\n      this.s_Group = res.data;\n    });\n    if (this.dataSourse) {\n      this.service.patchValue({\n        sName: this.dataSourse.sName,\n        sCharge: this.dataSourse.sCharge\n      });\n    }\n  }\n  saveService() {\n    if (this.dataSourse) {\n      this.serData.updatesaveService(this.dataSourse.id, this.service.value).subscribe(res => {\n        if (res) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Service Update',\n            showConfirmButton: false,\n            timer: 1200\n          });\n          this.dialog.closeAll();\n        }\n      });\n    } else {\n      this.serData.saveService(this.service.value).subscribe(res => {\n        if (res) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Service has been saved',\n            showConfirmButton: false,\n            timer: 1200\n          });\n          this.dialog.closeAll();\n        }\n      });\n    }\n  }\n}\nAddUserComponent.ɵfac = function AddUserComponent_Factory(t) {\n  return new (t || AddUserComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.DataService));\n};\nAddUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddUserComponent,\n  selectors: [[\"app-add-user\"]],\n  inputs: {\n    dataSourse: \"dataSourse\"\n  },\n  decls: 2,\n  vars: 0,\n  template: function AddUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"add-user works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAA6C,gBAAgB;AAG5F,OAAOC,IAAI,MAAM,aAAa;;;;;;AAO9B,OAAM,MAAOC,gBAAgB;EAI3BC,YAAmBC,MAAiB,EAASC,KAAqB,EAAUC,EAAe,EAASC,OAAoB;IAArG,WAAM,GAANH,MAAM;IAAoB,UAAK,GAALC,KAAK;IAA0B,OAAE,GAAFC,EAAE;IAAsB,YAAO,GAAPC,OAAO;EAC3G;EACAC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC3BC,WAAW,EAAC,CAAC,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACvCC,KAAK,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ,CAAC;MAChCE,OAAO,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACY,QAAQ;KACpC,CAAC;IACF,IAAI,CAACL,OAAO,CAACQ,eAAe,EAAE,CAACC,SAAS,CAAEC,GAAO,IAAG;MAClD,IAAI,CAACC,OAAO,GAACD,GAAG,CAACE,IAAI;IACvB,CAAC,CAAC;IACF,IAAG,IAAI,CAACC,UAAU,EAAC;MACjB,IAAI,CAACX,OAAO,CAACY,UAAU,CAAC;QACtBR,KAAK,EAAC,IAAI,CAACO,UAAU,CAACP,KAAK;QAC3BC,OAAO,EAAC,IAAI,CAACM,UAAU,CAACN;OAEzB,CAAC;;EAEF;EAEAQ,WAAW;IACZ,IAAG,IAAI,CAACF,UAAU,EAAC;MAClB,IAAI,CAACb,OAAO,CAACgB,iBAAiB,CAAC,IAAI,CAACH,UAAU,CAACI,EAAE,EAAC,IAAI,CAACf,OAAO,CAACgB,KAAK,CAAC,CAACT,SAAS,CAAEC,GAAO,IAAG;QACzF,IAAGA,GAAG,EAAC;UACLhB,IAAI,CAACyB,IAAI,CAAC;YACRC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,gBAAgB;YACvBC,iBAAiB,EAAE,KAAK;YACxBC,KAAK,EAAE;WACR,CAAC;UACF,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,EAAE;;MAE1B,CAAC,CAAC;KACF,MACG;MACH,IAAI,CAACxB,OAAO,CAACe,WAAW,CAAC,IAAI,CAACb,OAAO,CAACgB,KAAK,CAAC,CAACT,SAAS,CAAEC,GAAO,IAAG;QAChE,IAAGA,GAAG,EAAC;UACLhB,IAAI,CAACyB,IAAI,CAAC;YACRC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,wBAAwB;YAC/BC,iBAAiB,EAAE,KAAK;YACxBC,KAAK,EAAE;WACR,CAAC;UACF,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,EAAE;;MAE1B,CAAC,CAAC;;EAGJ;;AApDW7B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA8B;EAAAC;IAAAb;EAAA;EAAAc;EAAAC;EAAAC;IAAA;MCZ7BC,yBAAG;MAAAA,+BAAe;MAAAA,iBAAI","names":["Validators","Swal","AddUserComponent","constructor","dialog","route","fb","serData","ngOnInit","service","group","servicename","required","sName","sCharge","getserviceGroup","subscribe","res","s_Group","data","dataSourse","patchValue","saveService","updatesaveService","id","value","fire","icon","title","showConfirmButton","timer","closeAll","selectors","inputs","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\HMS\\F-HMS\\src\\app\\pages\\admin\\user\\add-user\\add-user.component.ts","D:\\HMS\\F-HMS\\src\\app\\pages\\admin\\user\\add-user\\add-user.component.html"],"sourcesContent":["import { Component,Input } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {  FormGroup, Validators, FormArray, FormControl, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from 'src/app/allService/data.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent {\n  @Input() dataSourse: any;\n  service!: FormGroup;\n  s_Group: any;\n  constructor(public dialog: MatDialog,private route: ActivatedRoute, private fb: FormBuilder,private serData :DataService) {\n  }\n  ngOnInit(){\n    this.service = this.fb.group({\n      servicename:[[\"\", Validators.required]],\n      sName: [\"\", Validators.required],\n      sCharge: [\"\", Validators.required],\n  });\n  this.serData.getserviceGroup().subscribe((res:any)=>{\n    this.s_Group=res.data\n  })\n  if(this.dataSourse){\n    this.service.patchValue({\n      sName:this.dataSourse.sName,\n      sCharge:this.dataSourse.sCharge,\n\n    })\n  }\n    }\n\n    saveService(){\n   if(this.dataSourse){\n    this.serData.updatesaveService(this.dataSourse.id,this.service.value).subscribe((res:any)=>{\n      if(res){\n        Swal.fire({\n          icon: 'success',\n          title: 'Service Update',\n          showConfirmButton: false,\n          timer: 1200\n        });\n        this.dialog.closeAll()\n      }\n    })\n   }\n   else{\n    this.serData.saveService(this.service.value).subscribe((res:any)=>{\n      if(res){\n        Swal.fire({\n          icon: 'success',\n          title: 'Service has been saved',\n          showConfirmButton: false,\n          timer: 1200\n        });\n        this.dialog.closeAll()\n      }\n    })\n   }\n\n  }\n}\n","<p>add-user works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}