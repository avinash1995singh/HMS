{"ast":null,"code":"import { AddRoomBadComponent } from './add-room-bad/add-room-bad.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"ngx-spinner\";\nimport * as i3 from \"src/app/allService/data.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/table\";\nimport * as i6 from \"@angular/forms\";\nfunction RoomBadComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const w_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(w_r11.ward);\n  }\n}\nfunction RoomBadComponent_th_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" Id. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RoomBadComponent_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r12.id, \" \");\n  }\n}\nfunction RoomBadComponent_th_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RoomBadComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r13.room, \" \");\n  }\n}\nfunction RoomBadComponent_th_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" Status \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RoomBadComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r14.status, \" \");\n  }\n}\nfunction RoomBadComponent_th_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \"Action \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RoomBadComponent_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 18)(1, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function RoomBadComponent_td_23_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const element_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.edit(element_r15));\n    });\n    i0.ɵɵtext(2, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function RoomBadComponent_td_23_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const element_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.delete(element_r15.name, element_r15.id));\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RoomBadComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 20);\n  }\n}\nfunction RoomBadComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 21);\n  }\n}\nexport class RoomBadComponent {\n  constructor(dialog, spinner, service) {\n    this.dialog = dialog;\n    this.spinner = spinner;\n    this.service = service;\n    this.displayedColumns = ['id', 'name', 'Status', 'Action'];\n  }\n  ngOnInit() {\n    this.spinner.show();\n    this.service.getWard().subscribe(res => {\n      this.ward = res.data;\n    });\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1000);\n    this.service.getDepartment().subscribe(res => {});\n  }\n  getrooms(e) {\n    this.service.getRoom(e.target.value).subscribe(res => {\n      this.listData = res.data;\n      this.dataSource = new MatTableDataSource(this.listData);\n    });\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(AddRoomBadComponent);\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n  edit(name) {\n    const dialogRef = this.dialog.open(AddRoomBadComponent);\n    dialogRef.componentInstance.dataSourse = name;\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n  delete(name, id) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n      }\n    });\n  }\n}\nRoomBadComponent.ɵfac = function RoomBadComponent_Factory(t) {\n  return new (t || RoomBadComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.NgxSpinnerService), i0.ɵɵdirectiveInject(i3.DataService));\n};\nRoomBadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RoomBadComponent,\n  selectors: [[\"app-room-bad\"]],\n  decls: 26,\n  vars: 5,\n  consts: [[1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [\"bdColor\", \"rgba(0, 0, 0, .4)\", \"size\", \"default\", \"color\", \"black\", \"type\", \"square-loader\", 3, \"fullScreen\"], [2, \"color\", \"rgb(8, 1, 1)\"], [\"aria-label\", \"Default select example\", 1, \"form-select\", \"w-50\", \"m-4\", 3, \"change\"], [\"selected\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"m-4\"], [1, \"table-heading\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"Status\"], [\"matColumnDef\", \"Action\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [1, \"btn\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function RoomBadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function RoomBadComponent_Template_button_click_0_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(1, \"Add Room-Bad\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ngx-spinner\", 1);\n      i0.ɵɵelement(3, \"p\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"select\", 3);\n      i0.ɵɵlistener(\"change\", function RoomBadComponent_Template_select_change_4_listener($event) {\n        return ctx.getrooms($event);\n      });\n      i0.ɵɵelementStart(5, \"option\", 4);\n      i0.ɵɵtext(6, \"Select Ward\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, RoomBadComponent_option_7_Template, 2, 1, \"option\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n      i0.ɵɵtext(10, \"Room-Bad List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"table\", 8);\n      i0.ɵɵelementContainerStart(12, 9);\n      i0.ɵɵtemplate(13, RoomBadComponent_th_13_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(14, RoomBadComponent_td_14_Template, 2, 1, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(15, 12);\n      i0.ɵɵtemplate(16, RoomBadComponent_th_16_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(17, RoomBadComponent_td_17_Template, 2, 1, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(18, 13);\n      i0.ɵɵtemplate(19, RoomBadComponent_th_19_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(20, RoomBadComponent_td_20_Template, 2, 1, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(21, 14);\n      i0.ɵɵtemplate(22, RoomBadComponent_th_22_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(23, RoomBadComponent_td_23_Template, 5, 0, \"td\", 11);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(24, RoomBadComponent_tr_24_Template, 1, 0, \"tr\", 15);\n      i0.ɵɵtemplate(25, RoomBadComponent_tr_25_Template, 1, 0, \"tr\", 16);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"fullScreen\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ward);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.MatTable, i5.MatHeaderCellDef, i5.MatHeaderRowDef, i5.MatColumnDef, i5.MatCellDef, i5.MatRowDef, i5.MatHeaderCell, i5.MatCell, i5.MatHeaderRow, i5.MatRow, i2.NgxSpinnerComponent, i6.NgSelectOption, i6.ɵNgSelectMultipleOption],\n  styles: [\".btn-primary[_ngcontent-%COMP%]{\\r\\n    color: #fff;\\r\\n        background-color: #348fe2;\\r\\n        border-color: #348fe2;\\r\\n        margin-left: calc(100% - 16%);\\r\\n  }\\r\\n  \\r\\n  .table-heading[_ngcontent-%COMP%]{\\r\\n    background-color: #1b2221;\\r\\n    color: #fff;\\r\\n    padding: 8px;\\r\\n    font-size: large;\\r\\n   \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYWRtaW4vcm9vbS1iYWQvcm9vbS1iYWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7UUFDUCx5QkFBeUI7UUFDekIscUJBQXFCO1FBQ3JCLDZCQUE2QjtFQUNuQzs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsWUFBWTtJQUNaLGdCQUFnQjs7RUFFbEIiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLXByaW1hcnl7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ4ZmUyO1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogIzM0OGZlMjtcclxuICAgICAgICBtYXJnaW4tbGVmdDogY2FsYygxMDAlIC0gMTYlKTtcclxuICB9XHJcbiAgXHJcbiAgLnRhYmxlLWhlYWRpbmd7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWIyMjIxO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICBmb250LXNpemU6IGxhcmdlO1xyXG4gICBcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["AddRoomBadComponent","MatTableDataSource","Swal","i0","RoomBadComponent","constructor","dialog","spinner","service","ngOnInit","show","getWard","subscribe","res","ward","data","setTimeout","hide","getDepartment","getrooms","e","getRoom","target","value","listData","dataSource","openDialog","dialogRef","open","afterClosed","result","edit","name","componentInstance","dataSourse","delete","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","isConfirmed","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\HMS\\F-HMS\\src\\app\\pages\\admin\\room-bad\\room-bad.component.ts","D:\\HMS\\F-HMS\\src\\app\\pages\\admin\\room-bad\\room-bad.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { AddRoomBadComponent } from './add-room-bad/add-room-bad.component';\nimport { DataService } from 'src/app/allService/data.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PeriodicElement } from '../department/department.component';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-room-bad',\n  templateUrl: './room-bad.component.html',\n  styleUrls: ['./room-bad.component.css']\n})\nexport class RoomBadComponent implements OnInit{\n  constructor(public dialog: MatDialog,private spinner: NgxSpinnerService,private service:DataService) {\n  }\n  ward:any;\n  displayedColumns: string[] = ['id', 'name', 'Status','Action'];\n  listData!:PeriodicElement[];\n  dataSource:any;\n  \n  ngOnInit(){\n    this.spinner.show();\n    this.service.getWard().subscribe((res:any)=>{\n      this.ward=res.data\n    })\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1000);\n\nthis.service.getDepartment().subscribe((res:any)=>{\n \n})\n   \n}\ngetrooms(e:any){\nthis.service.getRoom(e.target.value).subscribe((res:any)=>{\n  this.listData=res.data;\n  this.dataSource=new MatTableDataSource(this.listData)\n})\n}\n  openDialog(){\n    const dialogRef = this.dialog.open(AddRoomBadComponent);\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit()\n    });\n  }\n \n  edit(name:any){\n    const dialogRef = this.dialog.open(AddRoomBadComponent);\n    dialogRef.componentInstance.dataSourse = name;\n    dialogRef.afterClosed().subscribe(result => {\n    this.ngOnInit()\n    })\n    \n      }\n      delete(name:any,id:any){\n        Swal.fire({\n          title: 'Are you sure?',\n          text: \"You won't be able to revert this!\",\n          icon: 'warning',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n          if (result.isConfirmed) {\n            Swal.fire(\n              'Deleted!',\n              'Your file has been deleted.',\n              'success'\n            )\n          }\n        })\n    \n    \n      }\n\n}\n","<button  (click)=\"openDialog()\" class=\"btn btn-sm btn-primary\">Add Room-Bad</button>\n<!-- <ngx-spinner type=\"square-loader\"></ngx-spinner> -->\n<ngx-spinner bdColor = \"rgba(0, 0, 0, .4)\" size = \"default\" color = \"black\" type = \"square-loader\" [fullScreen] = \"true\"><p style=\"color: rgb(8, 1, 1)\" >  </p></ngx-spinner>\n\n<select class=\"form-select w-50 m-4\" aria-label=\"Default select example\" (change)=\"getrooms($event)\" >\n  <option selected>Select Ward</option>\n  <option *ngFor=\"let w of ward\"  >{{w.ward}}</option>\n</select>\n<div class=\"m-4\">\n<div class=\"table-heading\">Room-Bad List</div>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> Id. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.room}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"Status\">\n    <th mat-header-cell *matHeaderCellDef> Status </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"Action\">\n    <th mat-header-cell *matHeaderCellDef>Action </th>\n    <td mat-cell *matCellDef=\"let element\"> \n      <button class=\"btn\" (click)=\"edit(element)\">Edit</button> \n      <button class=\"btn\" (click)=\"delete(element.name,element.id)\">Delete</button> \n     </td>\n    \n    \n\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}