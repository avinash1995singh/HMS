{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/allService/data.service\";\nimport * as i5 from \"@angular/common\";\nfunction AddRoomBadComponent_div_6_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const w_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(w_r2.ward);\n  }\n}\nfunction AddRoomBadComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\", 5);\n    i0.ɵɵtext(2, \"Ward\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 10)(4, \"option\", 11);\n    i0.ɵɵtext(5, \"Select Ward\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AddRoomBadComponent_div_6_option_6_Template, 2, 1, \"option\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.ward);\n  }\n}\nexport class AddRoomBadComponent {\n  constructor(dialog, route, fb, service) {\n    this.dialog = dialog;\n    this.route = route;\n    this.fb = fb;\n    this.service = service;\n  }\n  ngOnInit() {\n    this.room = this.fb.group({\n      room: [\"\", Validators.required],\n      ward: [\"\", Validators.required],\n      status: [\"Avilable\", Validators.required]\n    });\n    this.service.getWard().subscribe(res => {\n      this.ward = res.data;\n    });\n    if (this.dataSourse) {\n      this.room.patchValue({\n        room: this.dataSourse.room\n      });\n    }\n  }\n  saveRoom() {\n    if (this.dataSourse) {\n      this.service.updateRoom(this.dataSourse.id, this.room.value).subscribe(res => {\n        if (res) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Room Update',\n            showConfirmButton: false,\n            timer: 1200\n          });\n          this.dialog.closeAll();\n        }\n      });\n    } else {\n      this.service.room(this.room.value).subscribe(res => {\n        if (res) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Room has been saved',\n            showConfirmButton: false,\n            timer: 1200\n          });\n          this.dialog.closeAll();\n        }\n      });\n    }\n  }\n}\nAddRoomBadComponent.ɵfac = function AddRoomBadComponent_Factory(t) {\n  return new (t || AddRoomBadComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.DataService));\n};\nAddRoomBadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddRoomBadComponent,\n  selectors: [[\"app-add-room-bad\"]],\n  inputs: {\n    dataSourse: \"dataSourse\"\n  },\n  decls: 17,\n  vars: 2,\n  consts: [[1, \"m-2\"], [1, \"modal-title\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"w-11/12 p-2 m-2\", 4, \"ngIf\"], [1, \"w-11/12\", \"p-2\", \"m-2\"], [\"for\", \"exampleFormControlInput1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleFormControlInput1\", \"formControlName\", \"room\", 1, \"form-control\"], [1, \"w-100\", \"gap-2\", \"d-flex\", \"justify-content-end\", \"p-2\"], [\"mat-dialog-close\", \"\", 1, \"btn\", \"btn-white\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"aria-label\", \"Default select example\", \"formControlName\", \"ward\", 1, \"form-select\"], [\"selected\", \"\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AddRoomBadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\")(1, \"div\", 0)(2, \"h4\", 1);\n      i0.ɵɵtext(3, \"Add/Edit Room/bad\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AddRoomBadComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.saveRoom();\n      });\n      i0.ɵɵtemplate(6, AddRoomBadComponent_div_6_Template, 7, 1, \"div\", 3);\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Room/Bed No\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"hr\");\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 9);\n      i0.ɵɵtext(16, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.room);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.dataSourse);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i1.MatDialogClose, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"section[_ngcontent-%COMP%]{\\r\\n    height: 370px;\\r\\n    width: 700px;\\r\\n}\\r\\n.modal-title[_ngcontent-%COMP%]{\\r\\n    color: rgb(78, 72, 72);\\r\\n    font-weight: 700;\\r\\n}\\r\\n.btn-success[_ngcontent-%COMP%]{\\r\\n    color: #fff;\\r\\n    background-color: #00acac;\\r\\n    border-color: #00acac;\\r\\n}\\r\\n.btn-white[_ngcontent-%COMP%]{\\r\\n    color: #212529;\\r\\n    background-color: #fff;\\r\\n    border-color: #d5dbe0;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYWRtaW4vcm9vbS1iYWQvYWRkLXJvb20tYmFkL2FkZC1yb29tLWJhZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7QUFDaEI7QUFDQTtJQUNJLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIscUJBQXFCO0FBQ3pCO0FBQ0E7SUFDSSxjQUFjO0lBQ2Qsc0JBQXNCO0lBQ3RCLHFCQUFxQjtBQUN6QiIsInNvdXJjZXNDb250ZW50IjpbInNlY3Rpb257XHJcbiAgICBoZWlnaHQ6IDM3MHB4O1xyXG4gICAgd2lkdGg6IDcwMHB4O1xyXG59XHJcbi5tb2RhbC10aXRsZXtcclxuICAgIGNvbG9yOiByZ2IoNzgsIDcyLCA3Mik7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG59XHJcbi5idG4tc3VjY2Vzc3tcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYWNhYztcclxuICAgIGJvcmRlci1jb2xvcjogIzAwYWNhYztcclxufVxyXG4uYnRuLXdoaXRle1xyXG4gICAgY29sb3I6ICMyMTI1Mjk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZDVkYmUwO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Swal","i0","AddRoomBadComponent","constructor","dialog","route","fb","service","ngOnInit","room","group","required","ward","status","getWard","subscribe","res","data","dataSourse","patchValue","saveRoom","updateRoom","id","value","fire","icon","title","showConfirmButton","timer","closeAll","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\HMS\\F-HMS\\src\\app\\pages\\admin\\room-bad\\add-room-bad\\add-room-bad.component.ts","D:\\HMS\\F-HMS\\src\\app\\pages\\admin\\room-bad\\add-room-bad\\add-room-bad.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {  FormGroup, Validators, FormArray, FormControl, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from 'src/app/allService/data.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-room-bad',\n  templateUrl: './add-room-bad.component.html',\n  styleUrls: ['./add-room-bad.component.css']\n})\nexport class AddRoomBadComponent {\n  @Input() dataSourse: any;\n  room!: FormGroup;\n  ward: any;\n  constructor(public dialog: MatDialog,private route: ActivatedRoute, private fb: FormBuilder,private service :DataService) {\n  }\n  ngOnInit(){\n    this.room = this.fb.group({\n      room: [\"\", Validators.required],\n      ward: [\"\", Validators.required],\n      status : [\"Avilable\", Validators.required]\n  });\n\n  this.service.getWard().subscribe((res:any)=>{\n    this.ward=res.data\n  })\n  if(this.dataSourse){\n    this.room.patchValue({\n      room:this.dataSourse.room\n    })\n  }\n\n    }\n\n    saveRoom(){\n   if(this.dataSourse){\n    this.service.updateRoom(this.dataSourse.id,this.room.value).subscribe((res:any)=>{\n      if(res){\n      Swal.fire({\n        icon: 'success',\n        title: 'Room Update',\n        showConfirmButton: false,\n        timer: 1200\n      });\n      this.dialog.closeAll()\n    }\n        })\n    \n   }\n   else{\n    this.service.room(this.room.value).subscribe((res:any)=>{\n      if(res){\n      Swal.fire({\n        icon: 'success',\n        title: 'Room has been saved',\n        showConfirmButton: false,\n        timer: 1200\n      });\n      this.dialog.closeAll()\n    }\n        })\n    \n   }\n  }\n\n \n\n\n \n\n}\n","\n\n    <section>\n        <div class=\"m-2\">\n            <h4 class=\"modal-title\">Add/Edit Room/bad</h4>\n        </div>\n        <hr>\n        <form [formGroup]=\"room\" (ngSubmit)=\"saveRoom()\">\n            <div *ngIf=\"!dataSourse\" class=\"w-11/12 p-2 m-2\">\n                <label for=\"exampleFormControlInput1\" class=\"form-label\">Ward</label>\n                <select class=\"form-select \" aria-label=\"Default select example\" formControlName=\"ward\" >\n                    <option selected>Select Ward</option>\n                    <option *ngFor=\"let w of ward\">{{w.ward}}</option>\n                </select>\n            </div>\n    <div class=\"w-11/12 p-2 m-2 \">\n        <label for=\"exampleFormControlInput1\" class=\"form-label\">Room/Bed No</label>\n        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" formControlName=\"room\" >\n    </div>\n    <hr>\n    <div class=\" w-100 gap-2 d-flex justify-content-end p-2\">\n        <button mat-dialog-close class=\"btn btn-white\"  >Close</button>\n        <button type=\"submit\" class=\"btn btn-success\"  >Submit</button>\n    </div>\n\n</form>\n</section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}