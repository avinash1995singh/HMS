{"ast":null,"code":"import { AddUserComponent } from './add-user/add-user.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/allService/user.service\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"src/app/allService/data.service\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nfunction UserComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 9)(1, \"a\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\", 10)(4, \"span\", 11);\n    i0.ɵɵlistener(\"click\", function UserComponent_li_11_Template_span_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const roles_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.edit(roles_r1.id));\n    });\n    i0.ɵɵelementStart(5, \"i\", 12);\n    i0.ɵɵtext(6, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"span\", 13)(8, \"i\", 12);\n    i0.ɵɵtext(9, \"delete\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const roles_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, i_r2 === 0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", roles_r1.roleName, \" \");\n  }\n}\nexport class UserComponent {\n  constructor(dialog, userService, spinner, service) {\n    this.dialog = dialog;\n    this.userService = userService;\n    this.spinner = spinner;\n    this.service = service;\n  }\n  ngOnInit() {\n    this.userService.getUser().subscribe(res => {\n      console.log(res);\n      this.allUser = res.data;\n    });\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(AddUserComponent);\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n  edit(name) {\n    const dialogRef = this.dialog.open(AddUserComponent);\n    dialogRef.componentInstance.dataSourse = name;\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n}\nUserComponent.ɵfac = function UserComponent_Factory(t) {\n  return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i4.DataService));\n};\nUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserComponent,\n  selectors: [[\"app-user\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [\"bdColor\", \"rgba(0, 0, 0, .4)\", \"size\", \"default\", \"color\", \"black\", \"type\", \"square-loader\", 3, \"fullScreen\"], [2, \"color\", \"rgb(8, 1, 1)\"], [1, \"row\"], [1, \"col-sm-4\", \"col-md-4\", \"col-lg-4\", \"col-xl-3\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#add_role\", 1, \"btn\", \"btn-primary\", \"w-100\"], [1, \"fa\", \"fa-plus\"], [1, \"roles-menu\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [1, \"role-action\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#edit_role\", 1, \"action-circle\", \"large\", 3, \"click\"], [1, \"material-icons\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#delete_role\", 1, \"action-circle\", \"large\", \"delete-btn\"]],\n  template: function UserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function UserComponent_Template_button_click_0_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(1, \"Add User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ngx-spinner\", 1);\n      i0.ɵɵelement(3, \"p\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"a\", 5);\n      i0.ɵɵelement(7, \"i\", 6);\n      i0.ɵɵtext(8, \" Add Roles\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"ul\");\n      i0.ɵɵtemplate(11, UserComponent_li_11_Template, 10, 4, \"li\", 8);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"fullScreen\", true);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.allUser);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i3.NgxSpinnerComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,gBAAgB,QAAQ,+BAA+B;;;;;;;;;;;;;;;ICUhDC,6BAAoF;IAC5EA,YACA;IAAAA,gCAA0B;IAC+DA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IACzGA,6BAA0B;IAAAA,oBAAI;IAAAA,iBAAI;IAEtCA,gCACmC;IACLA,sBAAM;IAAAA,iBAAI;;;;;IARhDA,gEAAmC;IAC/BA,eACA;IADAA,iDACA;;;ADCxB,OAAM,MAAOC,aAAa;EAExBC,YAAmBC,MAAiB,EAASC,WAAwB,EAASC,OAA0B,EAASC,OAAmB;IAAjH,WAAM,GAANH,MAAM;IAAoB,gBAAW,GAAXC,WAAW;IAAsB,YAAO,GAAPC,OAAO;IAA4B,YAAO,GAAPC,OAAO;EACxH;EACAC,QAAQ;IACN,IAAI,CAACH,WAAW,CAACI,OAAO,EAAE,CAACC,SAAS,CAAEC,GAAO,IAAG;MAC9CC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACd,IAAI,CAACG,OAAO,GAAEH,GAAG,CAACI,IAAI;IAC1B,CAAC,CAAC;EACJ;EAGAC,UAAU;IACR,MAAMC,SAAS,GAAG,IAAI,CAACb,MAAM,CAACc,IAAI,CAAClB,gBAAgB,CAAC;IACpDiB,SAAS,CAACE,WAAW,EAAE,CAACT,SAAS,CAACU,MAAM,IAAG,CAC3C,CAAC,CAAC;EACJ;EACAC,IAAI,CAACC,IAAQ;IACX,MAAML,SAAS,GAAG,IAAI,CAACb,MAAM,CAACc,IAAI,CAAClB,gBAAgB,CAAC;IACpDiB,SAAS,CAACM,iBAAiB,CAACC,UAAU,GAAGF,IAAI;IAC7CL,SAAS,CAACE,WAAW,EAAE,CAACT,SAAS,CAACU,MAAM,IAAG,CAC3C,CAAC,CAAC;EACN;;AAtBalB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCf1B5B,iCAA+D;MAAtDA;QAAA,OAAS6B,gBAAY;MAAA,EAAC;MAAgC7B,wBAAQ;MAAAA,iBAAS;MAEhFA,sCAAyH;MAAAA,uBAAsC;MAAAA,iBAAc;MAI7KA,8BAAiB;MAE2EA,uBACrD;MAACA,0BAAS;MAAAA,iBAAI;MAC7CA,8BAAwB;MAEhBA,+DAYK;MACTA,iBAAK;;;MAvBkFA,eAAqB;MAArBA,iCAAqB;MAU/CA,eAAW;MAAXA,qCAAW","names":["AddUserComponent","i0","UserComponent","constructor","dialog","userService","spinner","service","ngOnInit","getUser","subscribe","res","console","log","allUser","data","openDialog","dialogRef","open","afterClosed","result","edit","name","componentInstance","dataSourse","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\HMS\\F-HMS\\src\\app\\pages\\admin\\user\\user.component.ts","D:\\HMS\\F-HMS\\src\\app\\pages\\admin\\user\\user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { DataService } from 'src/app/allService/data.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PeriodicElement } from '../department/department.component';\nimport Swal from 'sweetalert2';\nimport { UserService } from 'src/app/allService/user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent {\n  allUser: any;\n  constructor(public dialog: MatDialog,private userService :UserService,private spinner: NgxSpinnerService,private service:DataService) {\n  }\n  ngOnInit(){\n    this.userService.getUser().subscribe((res:any)=>{\n      console.log(res)\n        this.allUser= res.data\n    })\n  }\n\n\n  openDialog(){\n    const dialogRef = this.dialog.open(AddUserComponent);\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n  edit(name:any){\n    const dialogRef = this.dialog.open(AddUserComponent);\n    dialogRef.componentInstance.dataSourse = name;\n    dialogRef.afterClosed().subscribe(result => {\n    })\n}\n}\n","<button  (click)=\"openDialog()\" class=\"btn btn-sm btn-primary\">Add User</button>\n<!-- <ngx-spinner type=\"square-loader\"></ngx-spinner> -->\n<ngx-spinner bdColor = \"rgba(0, 0, 0, .4)\" size = \"default\" color = \"black\" type = \"square-loader\" [fullScreen] = \"true\"><p style=\"color: rgb(8, 1, 1)\" >  </p></ngx-spinner>\n\n\n\n<div class=\"row\">\n    <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-3\">\n        <a  class=\"btn btn-primary w-100\" data-bs-toggle=\"modal\" data-bs-target=\"#add_role\"><i\n                class=\"fa fa-plus\"></i> Add Roles</a>\n        <div class=\"roles-menu\">\n            <ul>\n                <li [ngClass]=\"{ 'active' : i === 0  }\"*ngFor=\"let roles of allUser;let i = index\" >\n                    <a >{{roles.roleName}}\n                        <span class=\"role-action\">\n                            <span class=\"action-circle large\" data-bs-toggle=\"modal\" data-bs-target=\"#edit_role\" (click)=\"edit(roles.id)\">\n                                <i class=\"material-icons\">edit</i>\n                            </span>\n                            <span class=\"action-circle large delete-btn\" data-bs-toggle=\"modal\"\n                                data-bs-target=\"#delete_role\" >\n                                <i class=\"material-icons\">delete</i>\n                            </span>\n                        </span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <!-- <div class=\"col-sm-8 col-md-8 col-lg-8 col-xl-9\">\n        <h6 class=\"card-title m-b-20\">Module Access</h6>\n        <div class=\"m-b-30\">\n            <ul class=\"list-group notification-list\">\n                <li class=\"list-group-item\" *ngFor=\"let module of allModule;let i = index\">\n                    {{module.moduleName}}\n                    <div class=\"status-toggle\">\n                        <input type=\"checkbox\" id=\"staff_module\" (change)=\"ChangeStatus(module,i)\" class=\"check\">\n                        <label for=\"staff_module\" class=\"checktoggle\">checkbox</label>\n                    </div>\n                </li>\n            </ul>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped custom-table\">\n                <thead>\n                    <tr>\n                        <th>Module Permission</th>\n                        <th class=\"text-center\">Read</th>\n                        <th class=\"text-center\">Write</th>\n                        <th class=\"text-center\">Create</th>\n                        <th class=\"text-center\">Delete</th>\n                        <th class=\"text-center\">Import</th>\n                        <th class=\"text-center\">Export</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let permission of modulePermission; let i= index\">\n                        <td>{{permission.moduleName}}</td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" [checked]=\"permission.isCreate\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Holidays</td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Leaves</td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Events</td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                        <td class=\"text-center\">\n                            <input type=\"checkbox\" checked=\"\">\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div> -->\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}