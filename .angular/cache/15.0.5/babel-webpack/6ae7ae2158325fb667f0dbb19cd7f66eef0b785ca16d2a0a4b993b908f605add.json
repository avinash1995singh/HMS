{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(_http) {\n    this._http = _http;\n  }\n  department(data) {\n    return this._http.post('http://localhost:3000/department', data);\n  }\n  getDepartment() {\n    return this._http.get('http://localhost:3000/department');\n  }\n  updateDepartment(id, data) {\n    return this._http.put(`http://localhost:3000/updatedepartment/${id}`, data);\n  }\n  designation(data) {\n    return this._http.post('http://localhost:3000/designation', data);\n  }\n  updateDesignation(id, data) {\n    return this._http.put(`http://localhost:3000/updatedesignation/${id}`, data);\n  }\n  getdesignation() {\n    return this._http.get('http://localhost:3000/designation');\n  }\n  specialization(data) {\n    return this._http.post('http://localhost:3000/specialization', data);\n  }\n  getSpecialization() {\n    return this._http.get('http://localhost:3000/specialization');\n  }\n  updateSpecialization(id, data) {\n    return this._http.put(`http://localhost:3000/updatespecialization/${id}`, data);\n  }\n  ward(data) {\n    return this._http.post('http://localhost:3000/ward', data);\n  }\n  updateWard(id, data) {\n    return this._http.put(`http://localhost:3000/updateward/${id}`, data);\n  }\n  getWard() {\n    return this._http.get('http://localhost:3000/ward');\n  }\n  room(data) {\n    return this._http.post('http://localhost:3000/room', data);\n  }\n  updateRoom(id, data) {\n    return this._http.put(`http://localhost:3000/updateroom/${id}`, data);\n  }\n  getRoom(data1) {\n    const data = {\n      ward: data1\n    };\n    return this._http.post('http://localhost:3000/getroom', data);\n  }\n  serviceGroup(data) {\n    return this._http.post('http://localhost:3000/servicegroup', data);\n  }\n  updateServiceGroup(id, data) {\n    return this._http.put(`http://localhost:3000/updateServiceGroup/${id}`, data);\n  }\n  getserviceGroup() {\n    return this._http.get('http://localhost:3000/servicegroup');\n  }\n  getService(data) {\n    const data1 = {\n      servicename: data\n    };\n    return this._http.post('http://localhost:3000/getService', data1);\n  }\n  saveService(data) {\n    return this._http.post('http://localhost:3000/service', data);\n  }\n  updatesaveService(id, data) {\n    return this._http.put(`http://localhost:3000/updateService/${id}`, data);\n  }\n  saveHospitalDetails(data) {\n    return this._http.post('http://localhost:3000/hospitaldetails', data);\n  }\n  getHospitalDetails() {\n    return this._http.get('http://localhost:3000/hospitaldetails');\n  }\n  deleteDepartment(id) {\n    return this._http.delete(`http://localhost:3000/department/${id}`);\n  }\n  deleteDesignation(id) {\n    return this._http.delete(`http://localhost:3000/designation/${id}`);\n  }\n  deleteSpecialization(id) {\n    return this._http.delete(`http://localhost:3000/specialization/${id}`);\n  }\n  saveConsultant(data) {\n    return this._http.post('http://localhost:3000/consultant', data);\n  }\n  getConsultant() {\n    return this._http.get('http://localhost:3000/consultant');\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["DataService","constructor","_http","department","data","post","getDepartment","get","updateDepartment","id","put","designation","updateDesignation","getdesignation","specialization","getSpecialization","updateSpecialization","ward","updateWard","getWard","room","updateRoom","getRoom","data1","serviceGroup","updateServiceGroup","getserviceGroup","getService","servicename","saveService","updatesaveService","saveHospitalDetails","getHospitalDetails","deleteDepartment","delete","deleteDesignation","deleteSpecialization","saveConsultant","getConsultant","factory","providedIn"],"sourceRoot":"","sources":["D:\\HMS\\F-HMS\\src\\app\\allService\\data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private _http:HttpClient) { }\n\n  department(data:any){\n    return this._http.post('http://localhost:3000/department',data)\n  }\n\n  getDepartment(){\n    return this._http.get('http://localhost:3000/department')\n  }\n  updateDepartment(id:any,data:any){\n    return this._http.put(`http://localhost:3000/updatedepartment/${id}`,data)\n  }\n\n  designation(data:any){\n    return this._http.post('http://localhost:3000/designation',data)\n  }\n  updateDesignation(id:any,data:any){\n    return this._http.put(`http://localhost:3000/updatedesignation/${id}`,data)\n  }\n  getdesignation(){\n    return this._http.get('http://localhost:3000/designation')\n  }\n\n  \n  specialization(data:any){\n    return this._http.post('http://localhost:3000/specialization',data)\n  }\n  getSpecialization(){\n    return this._http.get('http://localhost:3000/specialization')\n  }\n  updateSpecialization(id:any,data:any){\n    return this._http.put(`http://localhost:3000/updatespecialization/${id}`,data)\n  }\n\n  ward(data:any){\n    return this._http.post('http://localhost:3000/ward',data)\n  }\n  updateWard(id:any,data:any){\n    return this._http.put(`http://localhost:3000/updateward/${id}`,data)\n  }\n  getWard(){\n    return this._http.get('http://localhost:3000/ward')\n  }\n\n\n  room(data:any){\n    return this._http.post('http://localhost:3000/room',data)\n  }\n  updateRoom(id:any,data:any){\n    return this._http.put(`http://localhost:3000/updateroom/${id}`,data)\n  }\n\n  getRoom(data1:any){\n    const  data = {\n        ward:data1\n    }\n    return this._http.post('http://localhost:3000/getroom',data)\n  }\n\n  serviceGroup(data:any){\n    return this._http.post('http://localhost:3000/servicegroup',data)\n  }\n  updateServiceGroup(id:any,data:any){\n    return this._http.put(`http://localhost:3000/updateServiceGroup/${id}`,data)  \n  }\n\n  getserviceGroup(){\n    return this._http.get('http://localhost:3000/servicegroup')\n  }\n\n  getService(data:any){\n    const  data1 = {\n      servicename:data\n    }\n    return this._http.post('http://localhost:3000/getService',data1)\n  }\nsaveService(data:any){\n  return this._http.post('http://localhost:3000/service',data)\n}\nupdatesaveService(id:any,data:any){\n  return this._http.put(`http://localhost:3000/updateService/${id}`,data)\n}\n\nsaveHospitalDetails(data:any){\n  return this._http.post('http://localhost:3000/hospitaldetails',data)\n}\ngetHospitalDetails(){\n  return this._http.get('http://localhost:3000/hospitaldetails')\n}\n\n\ndeleteDepartment(id:any){\n  return this._http.delete(`http://localhost:3000/department/${id}`)\n}\ndeleteDesignation(id:any){\n  return this._http.delete(`http://localhost:3000/designation/${id}`)\n}\n\ndeleteSpecialization(id:any){\n  return this._http.delete(`http://localhost:3000/specialization/${id}`)\n}\n\nsaveConsultant(data: any) {\n  return this._http.post('http://localhost:3000/consultant',data)\n}\ngetConsultant() {\n  return this._http.get('http://localhost:3000/consultant')\n}\n\n  \n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}