{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/allService/data.service\";\nexport class AddServiceGroupComponent {\n  constructor(dialog, route, fb, service) {\n    this.dialog = dialog;\n    this.route = route;\n    this.fb = fb;\n    this.service = service;\n  }\n  ngOnInit() {\n    this.serviceGroup = this.fb.group({\n      servicename: [\"\", Validators.required],\n      servicetype: [\"\", Validators.required]\n    });\n    if (this.dataSourse) {\n      this.serviceGroup.patchValue({\n        servicename: this.dataSourse.servicename,\n        servicetype: this.dataSourse.servicetype\n      });\n    }\n  }\n  saveGroups() {\n    if (this.dataSourse) {\n      this.service.updateServiceGroup(this.dataSourse.id, this.serviceGroup.value).subscribe(res => {\n        if (res) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Service Group Update',\n            showConfirmButton: false,\n            timer: 1200\n          });\n          this.dialog.closeAll();\n        }\n      });\n    } else {\n      this.service.serviceGroup(this.serviceGroup.value).subscribe(res => {\n        if (res) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Service Group has been saved',\n            showConfirmButton: false,\n            timer: 1200\n          });\n          this.dialog.closeAll();\n        }\n      });\n    }\n  }\n}\nAddServiceGroupComponent.ɵfac = function AddServiceGroupComponent_Factory(t) {\n  return new (t || AddServiceGroupComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.DataService));\n};\nAddServiceGroupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddServiceGroupComponent,\n  selectors: [[\"app-add-service-group\"]],\n  inputs: {\n    dataSourse: \"dataSourse\"\n  },\n  decls: 26,\n  vars: 1,\n  consts: [[1, \"m-3\"], [1, \"modal-title\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"w-11/12\", \"p-2\", \"m-2\"], [\"for\", \"exampleFormControlInput1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleFormControlInput1\", \"formControlName\", \"servicename\", 1, \"form-control\"], [\"for\", \"serviceType\", 1, \"form-label\"], [\"aria-label\", \"Default select example\", \"formControlName\", \"servicetype\", 1, \"form-select\"], [1, \"w-100\", \"gap-2\", \"d-flex\", \"justify-content-end\", \"p-2\"], [\"mat-dialog-close\", \"\", 1, \"btn\", \"btn-white\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function AddServiceGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\")(1, \"div\", 0)(2, \"h4\", 1);\n      i0.ɵɵtext(3, \"Add/Edit Service Group\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AddServiceGroupComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.saveGroups();\n      });\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Service Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Service Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"select\", 7)(14, \"option\");\n      i0.ɵɵtext(15, \"IPD Service\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"option\");\n      i0.ɵɵtext(17, \"OPD Service\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"option\");\n      i0.ɵɵtext(19, \"Both\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(20, \"hr\");\n      i0.ɵɵelementStart(21, \"div\", 8)(22, \"button\", 9);\n      i0.ɵɵtext(23, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 10);\n      i0.ɵɵtext(25, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.serviceGroup);\n    }\n  },\n  dependencies: [i1.MatDialogClose, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"section[_ngcontent-%COMP%]{\\r\\n    height: 370px;\\r\\n    width: 700px;\\r\\n}\\r\\n.modal-title[_ngcontent-%COMP%]{\\r\\n    color: rgb(78, 72, 72);\\r\\n    font-weight: 700;\\r\\n}\\r\\n.btn-success[_ngcontent-%COMP%]{\\r\\n    color: #fff;\\r\\n    background-color: #00acac;\\r\\n    border-color: #00acac;\\r\\n}\\r\\n.btn-white[_ngcontent-%COMP%]{\\r\\n    color: #212529;\\r\\n    background-color: #fff;\\r\\n    border-color: #d5dbe0;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYWRtaW4vc2VydmljZS1ncm91cC9hZGQtc2VydmljZS1ncm91cC9hZGQtc2VydmljZS1ncm91cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7QUFDaEI7QUFDQTtJQUNJLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIscUJBQXFCO0FBQ3pCO0FBQ0E7SUFDSSxjQUFjO0lBQ2Qsc0JBQXNCO0lBQ3RCLHFCQUFxQjtBQUN6QiIsInNvdXJjZXNDb250ZW50IjpbInNlY3Rpb257XHJcbiAgICBoZWlnaHQ6IDM3MHB4O1xyXG4gICAgd2lkdGg6IDcwMHB4O1xyXG59XHJcbi5tb2RhbC10aXRsZXtcclxuICAgIGNvbG9yOiByZ2IoNzgsIDcyLCA3Mik7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG59XHJcbi5idG4tc3VjY2Vzc3tcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYWNhYztcclxuICAgIGJvcmRlci1jb2xvcjogIzAwYWNhYztcclxufVxyXG4uYnRuLXdoaXRle1xyXG4gICAgY29sb3I6ICMyMTI1Mjk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZDVkYmUwO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAA6C,gBAAgB;AAG5F,OAAOC,IAAI,MAAM,aAAa;;;;;;AAO9B,OAAM,MAAOC,wBAAwB;EAGnCC,YAAmBC,MAAiB,EAASC,KAAqB,EAAUC,EAAe,EAASC,OAAoB;IAArG,WAAM,GAANH,MAAM;IAAoB,UAAK,GAALC,KAAK;IAA0B,OAAE,GAAFC,EAAE;IAAsB,YAAO,GAAPC,OAAO;EAC3G;EACAC,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAChCC,WAAW,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MACtCC,WAAW,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ;KACxC,CAAC;IACF,IAAG,IAAI,CAACE,UAAU,EAAC;MACjB,IAAI,CAACL,YAAY,CAACM,UAAU,CAAC;QAC3BJ,WAAW,EAAC,IAAI,CAACG,UAAU,CAACH,WAAW;QACvCE,WAAW,EAAC,IAAI,CAACC,UAAU,CAACD;OAE7B,CAAC;;EAEF;EAEAG,UAAU;IACZ,IAAG,IAAI,CAACF,UAAU,EAAC;MACjB,IAAI,CAACP,OAAO,CAACU,kBAAkB,CAAC,IAAI,CAACH,UAAU,CAACI,EAAE,EAAC,IAAI,CAACT,YAAY,CAACU,KAAK,CAAC,CAACC,SAAS,CAAEC,GAAO,IAAG;QAC/F,IAAGA,GAAG,EAAC;UACPpB,IAAI,CAACqB,IAAI,CAAC;YACRC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,sBAAsB;YAC7BC,iBAAiB,EAAE,KAAK;YACxBC,KAAK,EAAE;WACR,CAAC;UACF,IAAI,CAACtB,MAAM,CAACuB,QAAQ,EAAE;;MAErB,CAAC,CAAC;KACN,MACG;MACF,IAAI,CAACpB,OAAO,CAACE,YAAY,CAAC,IAAI,CAACA,YAAY,CAACU,KAAK,CAAC,CAACC,SAAS,CAAEC,GAAO,IAAG;QACtE,IAAGA,GAAG,EAAC;UACPpB,IAAI,CAACqB,IAAI,CAAC;YACRC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,8BAA8B;YACrCC,iBAAiB,EAAE,KAAK;YACxBC,KAAK,EAAE;WACR,CAAC;UACF,IAAI,CAACtB,MAAM,CAACuB,QAAQ,EAAE;;MAErB,CAAC,CAAC;;EAGP;;AA/CWzB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAA0B;EAAAC;IAAAf;EAAA;EAAAgB;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,+BAAS;MAEuBA,sCAAsB;MAAAA,iBAAK;MAEvDA,qBAAI;MACJA,+BAA2D;MAA1BA;QAAA,OAAYC,gBAAY;MAAA,EAAC;MAC9DD,8BAA6B;MACgCA,4BAAY;MAAAA,iBAAQ;MAC7EA,2BAAqG;MACzGA,iBAAM;MACNA,+BAA6B;MACmBA,6BAAY;MAAAA,iBAAQ;MAChEA,kCAAgG;MACnFA,4BAAW;MAAAA,iBAAS;MAC7BA,+BAAS;MAAAA,4BAAW;MAAAA,iBAAS;MAC7BA,+BAAS;MAAAA,qBAAI;MAAAA,iBAAS;MAK9BA,sBAAI;MACJA,+BAAyD;MACJA,sBAAK;MAAAA,iBAAS;MAC/DA,mCAAgD;MAAAA,uBAAM;MAAAA,iBAAS;;;MAlBzDA,eAA0B;MAA1BA,4CAA0B","names":["Validators","Swal","AddServiceGroupComponent","constructor","dialog","route","fb","service","ngOnInit","serviceGroup","group","servicename","required","servicetype","dataSourse","patchValue","saveGroups","updateServiceGroup","id","value","subscribe","res","fire","icon","title","showConfirmButton","timer","closeAll","selectors","inputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\HMS\\F-HMS\\src\\app\\pages\\admin\\service-group\\add-service-group\\add-service-group.component.ts","D:\\HMS\\F-HMS\\src\\app\\pages\\admin\\service-group\\add-service-group\\add-service-group.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {  FormGroup, Validators, FormArray, FormControl, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from 'src/app/allService/data.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-service-group',\n  templateUrl: './add-service-group.component.html',\n  styleUrls: ['./add-service-group.component.css']\n})\nexport class AddServiceGroupComponent {\n  @Input() dataSourse: any;\n  serviceGroup!: FormGroup;\n  constructor(public dialog: MatDialog,private route: ActivatedRoute, private fb: FormBuilder,private service :DataService) {\n  }\n  ngOnInit(){\n    this.serviceGroup = this.fb.group({\n      servicename: [\"\", Validators.required],\n      servicetype: [\"\", Validators.required]\n  });\n  if(this.dataSourse){\n    this.serviceGroup.patchValue({\n      servicename:this.dataSourse.servicename,\n      servicetype:this.dataSourse.servicetype,\n\n    })\n  }\n    }\n\n    saveGroups(){\n  if(this.dataSourse){\n    this.service.updateServiceGroup(this.dataSourse.id,this.serviceGroup.value).subscribe((res:any)=>{\n      if(res){\n      Swal.fire({\n        icon: 'success',\n        title: 'Service Group Update',\n        showConfirmButton: false,\n        timer: 1200\n      });\n      this.dialog.closeAll()\n    } \n       })\n  }\n  else{\n    this.service.serviceGroup(this.serviceGroup.value).subscribe((res:any)=>{\n      if(res){\n      Swal.fire({\n        icon: 'success',\n        title: 'Service Group has been saved',\n        showConfirmButton: false,\n        timer: 1200\n      });\n      this.dialog.closeAll()\n    } \n       })\n  }\n\n  }\n}\n","\n\n    <section>\n        <div class=\"m-3\">\n            <h4 class=\"modal-title\">Add/Edit Service Group</h4>\n        </div>\n        <hr>\n        <form [formGroup]=\"serviceGroup\" (ngSubmit)=\"saveGroups()\">\n    <div class=\"w-11/12 p-2 m-2\">\n        <label for=\"exampleFormControlInput1\" class=\"form-label\">Service Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" formControlName=\"servicename\" >\n    </div>\n    <div class=\"w-11/12 p-2 m-2\">\n        <label for=\"serviceType\" class=\"form-label\">Service Type</label>\n        <select class=\"form-select \" aria-label=\"Default select example\" formControlName=\"servicetype\" >\n            <option >IPD Service</option>\n            <option >OPD Service</option>\n            <option >Both</option>\n            \n        </select>\n    </div>\n    \n    <hr>\n    <div class=\" w-100 gap-2 d-flex justify-content-end p-2\">\n        <button mat-dialog-close class=\"btn btn-white\"  >Close</button>\n        <button type=\"submit\" class=\"btn btn-success\"  >Submit</button>\n    </div>\n\n</form>\n</section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}